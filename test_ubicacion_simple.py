"""
Test simplificado del sistema de ubicaci√≥n con geocoder.
Se enfoca en las funcionalidades principales que funcionan bien.
"""

from ubicacion import UbicacionManager

def main():
    """Test principal del sistema de ubicaci√≥n con geocoder."""
    print("üöÄ ASTROTRACKER - TEST SISTEMA DE UBICACI√ìN CON GEOCODER")
    print("=" * 70)
    
    # Crear instancia del manager
    ubicacion_mgr = UbicacionManager()
    
    # Test 1: Obtener ubicaci√≥n autom√°tica
    print("\nüåç TEST 1: Obteniendo ubicaci√≥n autom√°tica...")
    print("-" * 50)
    
    ubicacion = ubicacion_mgr.obtener_ubicacion()
    
    if ubicacion:
        print("‚úÖ Ubicaci√≥n obtenida exitosamente!")
        ubicacion_mgr.imprimir_ubicacion()
        
        # Test 2: Objeto EarthLocation para astronom√≠a
        print("\nüåå TEST 2: Creando objeto EarthLocation para astronom√≠a...")
        print("-" * 50)
        
        earth_location = ubicacion_mgr.get_earth_location()
        if earth_location is not None:
            print("‚úÖ Objeto EarthLocation creado exitosamente!")
            print("Este objeto es esencial para c√°lculos astron√≥micos precisos:")
            print(f"   ‚Ä¢ Latitud astron√≥mica: {earth_location.lat}")
            print(f"   ‚Ä¢ Longitud astron√≥mica: {earth_location.lon}")
            print(f"   ‚Ä¢ Altura sobre el nivel del mar: {earth_location.height}")
        
        # Test 3: Guardar configuraci√≥n
        print("\nüíæ TEST 3: Guardando configuraci√≥n...")
        print("-" * 50)
        
        if ubicacion_mgr.guardar_ubicacion("astrotracker_ubicacion.json"):
            print("‚úÖ Configuraci√≥n guardada en 'astrotracker_ubicacion.json'")
            print("Ahora puedes cargar esta configuraci√≥n r√°pidamente en el futuro.")
        
        # Test 4: Ubicaci√≥n manual (para telescopios fijos)
        print("\nüéØ TEST 4: Estableciendo ubicaci√≥n manual...")
        print("-" * 50)
        
        # Ejemplo: Observatorio del Teide, Espa√±a
        lat_teide = 28.3009
        lon_teide = -16.5093
        alt_teide = 2390
        
        ubicacion_manual = ubicacion_mgr.establecer_ubicacion_manual(
            lat_teide, lon_teide, alt_teide, 
            "Observatorio del Teide", "Espa√±a"
        )
        
        if ubicacion_manual:
            print("‚úÖ Ubicaci√≥n manual establecida (Observatorio del Teide):")
            print(f"   ‚Ä¢ Latitud: {lat_teide}¬∞")
            print(f"   ‚Ä¢ Longitud: {lon_teide}¬∞") 
            print(f"   ‚Ä¢ Altitud: {alt_teide} m")
            print("Esto es √∫til para telescopios en ubicaciones fijas conocidas.")
        
        # Test 5: Diferentes proveedores
        print("\nüîÑ TEST 5: Probando proveedores alternativos...")
        print("-" * 50)
        
        ubicacion_alt = ubicacion_mgr.obtener_ubicacion_alternativa()
        if ubicacion_alt:
            print("‚úÖ Proveedor alternativo funcion√≥!")
            print(f"Proveedor usado: {ubicacion_alt.get('proveedor', 'N/A')}")
        else:
            print("‚ö†Ô∏è  Los proveedores alternativos no est√°n disponibles actualmente")
        
        # Resumen final
        print("\nüéØ RESUMEN PARA ASTROTRACKER")
        print("=" * 70)
        print("‚úÖ Sistema de ubicaci√≥n configurado exitosamente")
        print("‚úÖ Objeto EarthLocation creado para c√°lculos astron√≥micos") 
        print("‚úÖ Configuraci√≥n guardada para uso futuro")
        print("\nüìç INFORMACI√ìN CLAVE PARA TU ASTROTRACKER:")
        ubicacion_actual = ubicacion_mgr.ubicacion_actual
        if ubicacion_actual:
            print(f"   ‚Ä¢ Latitud: {ubicacion_actual['latitud']:.6f}¬∞")
            print(f"   ‚Ä¢ Longitud: {ubicacion_actual['longitud']:.6f}¬∞")
            print(f"   ‚Ä¢ Ubicaci√≥n: {ubicacion_actual.get('ciudad', 'N/A')}, {ubicacion_actual.get('pais', 'N/A')}")
        
        print("\nüîß PR√ìXIMOS PASOS:")
        print("   1. Integrar esta ubicaci√≥n con los c√°lculos de seguimiento")
        print("   2. Usar EarthLocation para c√°lculos de coordenadas celestes")
        print("   3. Implementar correcci√≥n por altitud si tienes un observatorio elevado")
        
    else:
        print("‚ùå No se pudo obtener la ubicaci√≥n")
        print("üí° Puedes usar ubicaci√≥n manual con coordenadas conocidas:")
        print("   ubicacion_mgr.establecer_ubicacion_manual(lat, lon, altitud)")
    
    print("\nüéâ TEST COMPLETADO")
    print("=" * 70)

if __name__ == "__main__":
    try:
        main()
    except KeyboardInterrupt:
        print("\n‚èπÔ∏è  Test interrumpido por el usuario")
    except Exception as e:
        print(f"\n‚ùå Error durante el test: {e}")
        import traceback
        traceback.print_exc()